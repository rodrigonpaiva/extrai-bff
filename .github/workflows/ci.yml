name: ci
on:
  push:
    branches: [main]
  pull_request:

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Install deps
        run: pip install -r requirements.txt

      - name: Lint (ruff)
        shell: bash
        run: |
          python -m pip install ruff || true
          if [ -d tests ]; then
            ruff check src tests
          else
            ruff check src
          fi

      - name: Tests (pytest)
        shell: bash
        env:
          POSTGRES_URL: postgresql+psycopg://user:pass@localhost:5432/extrai
          REDIS_URL: redis://localhost:6379/0
        run: |
          if [ -d tests ] && compgen -G "tests/test_*.py" > /dev/null; then
            pytest -q
          else
            echo "No tests found; skipping pytest."
          fi

  docker-build:
    needs: lint-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'ghcr.io' }}
      REPO: ${{ secrets.DOCKER_REPO || github.repository }}
      IMAGE_CACHE: buildcache
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # login só quando NÃO for PR
      - name: Login to registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME || github.actor }}
          password: ${{ secrets.DOCKER_TOKEN || secrets.GITHUB_TOKEN }}

      - name: Extract meta (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.REPO }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build (push only on main/tags)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: infra/docker/Dockerfile.app
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache: GHA em PR; registry em main/tags
          cache-from: ${{ github.event_name == 'pull_request'
            && 'type=gha'
            || format('type=registry,ref={0}/{1}:{2}', env.REGISTRY, env.REPO, env.IMAGE_CACHE) }}
          cache-to: ${{ github.event_name == 'pull_request'
            && 'type=gha,mode=max'
            || format('type=registry,ref={0}/{1}:{2},mode=max', env.REGISTRY, env.REPO, env.IMAGE_CACHE) }}
